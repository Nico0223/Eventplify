<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Event Details</title>
    <link rel="stylesheet" href="/css/events_page_detailed.css">
    <style>
        /* CSS for map container */
        #event-location-map {
            height: 400px;
            /* Adjust height as needed */
            width: 100%;
            /* Full width */
            margin-bottom: 20px;
        }
    </style>
</head>

<body style="margin: 0; font-family: Arial, sans-serif;">
    <div id="top">
        <div id="homelogo">
            <img src="/css/logocropped.png" id="logo">
        </div>
    </div>

    <div id="middle">
        <div id="head">
            <p id="header">EVENT DETAILS</p>
        </div>
        <div id="event-details">
            <!-- Event details will be dynamically added here -->
        </div>
        <div id="event-location-map"></div> <!-- Container for Google Maps -->
    </div>

    <script>
        // Function to get query parameter value
        function getQueryParam(param) {
            const urlParams = new URLSearchParams(window.location.search);
            return urlParams.get(param);
        }

        // Function to fetch and display event details
        async function fetchAndDisplayEventDetails() {
            try {
                const urlParams = new URLSearchParams(window.location.search);
                const eventId = urlParams.get('eventId');
                if (!eventId) {
                    throw new Error('Event ID not found in URL');
                }

                const response = await fetch(`/api/events/${eventId}`);
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }

                const event = await response.json();
                const eventDetailsDiv = document.getElementById('event-details');
                eventDetailsDiv.innerHTML = `
                    <div class="event-header">
                        <h1 class="event-name">${event.name}</h1>
                        <div class="event-meta">
                            <p><strong>Date:</strong> ${event.date}</p>
                            <p><strong>Time:</strong> ${event.startTime} - ${event.endTime}</p>
                            <p><strong>Location:</strong> ${event.location}</p>
                            <p><strong>Event Code:</strong> ${event.code}</p>
                        </div>
                        <div class="event-actions">
                            <button class="edit-button">Edit</button>
                            <button class="delete-button">Delete</button>
                            <button class="share-button">Share</button>
                            <div id="copyPopup" class="popup">Link copied!</div>
                        </div>
                    </div>
                    <div class="event-description">
                        <h2>Description</h2>
                        <p>${event.description}</p>
                    </div>
                `;

                // Initialize Google Map and place marker
                initMap(event.location);
            } catch (error) {
                console.error('Error fetching event details:', error);
            }
        }

        function initMap(eventLocation) {
            // Initialize Google Map and place marker
            //var myLocation = document.querySelector(".location").id;
            console.log(eventLocation);
            var mapOptions = {
                zoom: 15,
                mapTypeId: google.maps.MapTypeId.ROADMAP
            };

            var map = new google.maps.Map(document.getElementById('event-location-map'), mapOptions);

            // Initialize geocoder
            var geocoder = new google.maps.Geocoder();

            // Geocode the event location
            geocoder.geocode({ 'address': eventLocation }, function (results, status) {
                if (status === google.maps.GeocoderStatus.OK && results[0]) {
                    map.setCenter(results[0].geometry.location);
                    var marker = new google.maps.Marker({
                        map: map,
                        position: results[0].geometry.location
                    });
                } else {
                    console.error('Geocode was not successful for the following reason: ' + status);
                }
            });
        }

        document.addEventListener('DOMContentLoaded', fetchAndDisplayEventDetails);
    </script>


    <script async defer
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDn6SPh3mOJj3iuHCu1njWKcgIY_wACEb0&libraries=places&callback=initMap">
        </script>
</body>

</html>